{"version":3,"sources":["components/Section.js","components/Statistic.js","components/FeedbackOptions.js","components/Notification.js","App.js","index.js"],"names":["Section","props","title","children","Statistic","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","options","map","el","type","key","uuidv4","onClick","Notification","message","App","state","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Container","Object","keys","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAYeA,EAVC,SAAAC,GAAU,IAChBC,EAAUD,EAAVC,MACR,OACE,oCACE,4BAAKA,GACJD,EAAME,W,QCOEC,EAZG,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC9C,OACE,kBAAC,WAAD,KACE,+DAAYJ,GACZ,6FAAiBC,GACjB,qEAAaC,GACb,yLAAkCC,KAClC,2MAAqCC,IAArC,Q,gBCOSC,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,oCACGA,EAAQ,GAAGC,KAAI,SAAAC,GAAE,OAChB,kBAAC,IAAD,CAAgBC,KAAK,SAASC,IAAKC,cAAUC,QAAS,kBAAMP,EAAgBG,KACzEA,QCFIK,EALM,SAAAlB,GAAU,IACrBmB,EAAYnB,EAAZmB,QACR,OAAO,4BAAKA,ICoDCC,E,4MAhDbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,gBAAkB,SAAAG,GAChB,EAAKS,UAAS,SAAAD,GAAK,sBAAQR,EAAKQ,EAAMR,GAAM,O,EAG9CU,mBAAqB,WAAO,IAAD,EACM,EAAKF,MACpC,OAFyB,EACjBjB,KADiB,EACXC,QADW,EACFC,K,EAIzBkB,gCAAkC,WAAO,IAAD,EAChB,EAAKH,MAAnBjB,EAD8B,EAC9BA,KAAME,EADwB,EACxBA,IACd,OAAOmB,KAAKC,MAAMtB,GAAQA,EAAOE,EAAM,MAAS,M,uDAGxC,IAAD,EACwBqB,KAAKN,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,kBAACsB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAS3B,MAAM,8JACb,kBAAC,EAAD,CACES,gBAAiBiB,KAAKjB,gBACtBC,QAAS,CAACkB,OAAOC,KAAKH,KAAKN,WAG/B,kBAAC,EAAD,CAASpB,MAAM,gEACZG,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKJ,mBACZf,mBAAoBmB,KAAKH,kCAG3B,kBAAC,EAAD,CAAcL,QAAQ,sG,GAzChBY,IAAMC,WCHxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8246dda6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = props => {\r\n  const { title } = props;\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {props.children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <Fragment>\r\n      <h3>Добре: {good}</h3>\r\n      <h3>Нейтрально: {neutral}</h3>\r\n      <h3>Погано: {bad}</h3>\r\n      <h3>Загальна кількість відгуків: {total()}</h3>\r\n      <h3>Статистика позитивних відгуків: {positivePercentage()} %</h3>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport MaterialButton from '@material-ui/core/Button';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      {options[0].map(el => (\r\n        <MaterialButton type=\"button\" key={uuidv4()} onClick={() => onLeaveFeedback(el)}>\r\n          {el}\r\n        </MaterialButton>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Notification = props => {\r\n  const { message } = props;\r\n  return <h3>{message}</h3>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\nimport Section from './components/Section.js';\nimport Container from '@material-ui/core/Container';\nimport Statistic from './components/Statistic';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = el => {\n    this.setState(state => ({ [el]: state[el] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, bad } = this.state;\n    return Math.round(good / (good + bad + 0.001) / 0.01);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Будь-ласка залиште Ваш відгук\">\n          <FeedbackOptions\n            onLeaveFeedback={this.onLeaveFeedback}\n            options={[Object.keys(this.state)]}\n          />\n        </Section>\n        <Section title=\"Статистика\">\n          {good > 0 || neutral > 0 || bad > 0 ? (\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"Відгуки відсутні\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}